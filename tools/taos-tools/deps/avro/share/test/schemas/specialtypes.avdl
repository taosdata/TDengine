/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** NOTE: This structure is intended to contain names that are likely to cause collisions with the generated code. */

@namespace("org.apache.avro.test.specialtypes")
protocol LetsBreakIt {

    enum Enum {
        builder,
        Builder,
        builderBuider,
        value,
        this
    }

    record One {
        Enum    this;
    }

    record Two {
        union { null, string } this = null;
        string                 String;
    }

    record Variables {
        One       this;

        One       Boolean;
        One       Integer;
        One       Long;
        One       Float;
        One       String;
    }

    enum Boolean {
        Yes,
        No
    }

    record String {
        string value;
    }

    record builder {
        One      this;
        Two      builder;
    }

    record builderBuilder {
        One      this;
        Two      that;
    }

    record Builder {
        One      this;
        Two      that;
    }

    record value {
        One      this;
        Two      that;
    }

    record Types {
      Boolean one;
      builder two;
      Builder three;
      builderBuilder four;
      String five;
      value six;
    }

    record Names {
      string Boolean;
      string builder;
      string Builder;
      string builderBuilder;
      string String;
      string value;
    }

    record TopLevelDomainNames {
      string org;
      string avro;
      string com;
      string net;
      string nl;
    }

    record Exception {
      string whatever;
    }
}
