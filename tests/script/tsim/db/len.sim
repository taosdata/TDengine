system sh/stop_dnodes.sh
system sh/deploy.sh -n dnode1 -i 1
system sh/exec.sh -n dnode1 -s start
sql connect

print =============== step1
sql_error drop database dd

sql create database -x step1
	return -1
step1:

sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step2
sql create database a
sql select * from information_schema.ins_databases
if $rows != 3 then
  return -1
endi

sql drop database a
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step3
sql create database a12345678
sql select * from information_schema.ins_databases
if $rows != 3 then
  return -1
endi

sql drop database a12345678
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step4
sql create database a012345678901201234567890120123456789012a012345678901201234567890120123456789012 -x step4
	return -1
step4:
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step5
sql create database a;1
sql drop database a
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step6
sql create database a'1 -x step6
	return -1
step6:

sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step7
sql create database (a) -x step7
	return -1
step7:
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

print =============== step8
sql create database a.1 -x step8
	return -1
step8:
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

system sh/exec.sh -n dnode1 -s stop -x SIGINT
