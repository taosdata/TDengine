system sh/stop_dnodes.sh
system sh/deploy.sh -n dnode1 -i 1
system sh/exec.sh -n dnode1 -s start
sql connect

$dbPrefix = m_in_db
$tbPrefix = m_in_tb
$mtPrefix = m_in_mt
$tbNum = 10
$rowNum = 20
$totalNum = 200

print =============== step1
$i = 0
$db = $dbPrefix . $i
$mt = $mtPrefix . $i

sql drop database $db -x step1
step1:
sql create database $db
sql use $db
sql create table $mt (ts timestamp, tbcol int) TAGS(tgcol int)

$i = 0
while $i < $tbNum
  $tb = $tbPrefix . $i
  sql create table $tb using $mt tags( $i )

  $x = 0
  while $x < $rowNum
    $cc = $x * 60000
    $ms = 1601481600000 + $cc

    sql insert into $tb values ($ms , $x )
    $x = $x + 1
  endw

  $i = $i + 1
endw

print =============== step2
$i = 1
$tb = $tbPrefix . $i

sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $tb interval(1m)
print ===> $rows
if $rows < $rowNum then
  return -1
endi
if $data00 != 1 then
  return -1
endi
if $data04 != 1 then
  return -1
endi

print =============== step3
$cc = 4 * 60000
$ms = 1601481600000 + $cc
sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $tb  where ts <= $ms interval(1m)
print ===> $rows
if $rows > 10 then
  return -1
endi
if $rows < 3 then
  return -1
endi
if $data00 != 1 then
  return -1
endi
if $data04 != 1 then
  return -1
endi

print =============== step4
$cc = 40 * 60000
$ms = 1601481600000 + $cc

$cc = 1 * 60000
$ms2 = 1601481600000 - $cc

sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $tb  where ts <= $ms and ts > $ms2 interval(1m)
print ===> $rows
if $rows < 18 then
  return -1
endi
if $rows > 22 then
  return -1
endi
if $data00 != 1 then
  return -1
endi
if $data04 != 1 then
  return -1
endi

print =============== step5
$cc = 40 * 60000
$ms = 1601481600000 + $cc

$cc = 1 * 60000
$ms2 = 1601481600000 - $cc

sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $tb  where ts <= $ms and ts > $ms2 interval(1m) fill(value,0,0,0,0,0)
print ===> $rows
if $rows < 30 then
  print expect greater than 30, actual: $rows
  return -1
endi
if $rows > 50 then
  return -1
endi
if $data20 != 1 then
  return -1
endi
if $data24 != 1 then
  return -1
endi

print =============== step6
sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $mt interval(1m)
print ===> $rows
if $rows < 18 then
  return -1
endi
if $rows > 22 then
  return -1
endi
if $data10 > 15 then
  return -1
endi
if $data10 < 5 then
  return -1
endi

print =============== step7
$cc = 4 * 60000
$ms = 1601481600000 + $cc
sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $mt  where ts <= $ms interval(1m)
print ===> $rows
if $rows < 3 then
  return -1
endi
if $rows > 7 then
  return -1
endi
if $data10 > 15 then
  return -1
endi
if $data10 < 5 then
  return -1
endi

print =============== step8
$cc = 40 * 60000
$ms1 = 1601481600000 + $cc

$cc = 1 * 60000
$ms2 = 1601481600000 - $cc

sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $mt  where ts <= $ms1 and ts > $ms2 interval(1m)
print ===> $rows
if $rows < 18 then
  return -1
endi
if $rows > 22 then
  return -1
endi
if $data10 > 15 then
  return -1
endi
if $data10 < 5 then
  return -1
endi

print =============== step9
$cc = 40 * 60000
$ms1 = 1601481600000 + $cc

$cc = 1 * 60000
$ms2 = 1601481600000 - $cc

sql select count(tbcol), avg(tbcol), max(tbcol), min(tbcol), count(tbcol) from $mt  where ts <= $ms1 and ts > $ms2 interval(1m) fill(value, 0,0,0,0,0)
if $rows < 30 then
  return -1
endi
if $rows > 50 then
  return -1
endi
if $data10 > 15 then
  return -1
endi
if $data10 < 5 then
  return -1
endi

print =============== clear
sql drop database $db
sql select * from information_schema.ins_databases
if $rows != 2 then
  return -1
endi

system sh/exec.sh -n dnode1 -s stop -x SIGINT
